# Filter data for 2019 and 2020
data_19_20 = data[(data['Year'] == 2019) | (data['Year'] == 2020)]

# Create a new column for the month
data_19_20['Month'] = pd.to_datetime(data_19_20['CRASH DATE']).dt.month

data_19_20_in = data_19_20[data_19_20['NUMBER OF PERSONS INJURED'] > 0]

# Create bar plot with months on the x-axis
fig, ax = plt.subplots(figsize=(18, 7))
data_19_20_in.groupby(['Month', 'Year']).size().unstack().plot(kind='bar', ax=ax, color=['#1f78b4', '#33a02c'], alpha=0.7)
plt.title('Monthly Injuries in 2019 and 2020', fontsize=18)
plt.xlabel('Month', fontsize=14)
plt.ylabel('Number of Injuries', fontsize=14)
plt.xticks(rotation=0, fontsize=12)
plt.legend(title='Year', fontsize=12, title_fontsize=14)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()  # Adjust layout to prevent clipping of tick-labels
plt.show()





# Filter data for 2019 and 2020
data_19_20 = data[(data['Year'] == 2019) | (data['Year'] == 2020)]

# Create a new column for the month
data_19_20['Month'] = pd.to_datetime(data_19_20['CRASH DATE']).dt.month

data_19_20_fa = data_19_20[data_19_20['NUMBER OF PERSONS INJURED'] > 0]

# Create bar plot with months on the x-axis
fig, ax = plt.subplots(figsize=(18, 7))
data_19_20_fa.groupby(['Month', 'Year']).size().unstack().plot(kind='bar', ax=ax, color=['#1f78b4', '#33a02c'], alpha=0.7)
plt.title('Monthly Fatalities in 2019 and 2020', fontsize=18)
plt.xlabel('Month', fontsize=14)
plt.ylabel('Number of Fatalities', fontsize=14)
plt.xticks(rotation=0, fontsize=12)
plt.legend(title='Year', fontsize=12, title_fontsize=14)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()  # Adjust layout to prevent clipping of tick-labels
plt.show()